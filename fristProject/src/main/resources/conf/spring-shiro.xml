<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd">

	<!-- 引入EHCache注解驱动 -->
<!-- 	<cache:annotation-driven cache-manager ="ehcacheCacheManager" /> -->

	<!-- 配置EHCache总线 -->
<!-- 	<bean id = "ehCacheManager" class= "org.springframework.cache.ehcache.EhCacheManagerFactoryBean" > -->
<!-- 	    <property name = "configLocation" value= "classpath:conf/ehcache.xml" /> -->
<!-- 	    允许shiro和mybatis共享ehcache -->
<!-- 	    <property name="shared" value="true" /> -->
<!-- 	</bean> -->
	
	<!-- 系统缓存对象 -->
<!-- 	<bean id = "ehcacheCacheManager" class= "org.springframework.cache.ehcache.EhCacheCacheManager"> -->
<!-- 	    <property name="cacheManager" ref="ehCacheManager"/>   -->
<!-- 	</bean> -->
	<!-- shiro缓存对象 -->
<!-- 	<bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager"> -->
<!-- 	    <property name="cacheManager" ref="ehCacheManager"/> -->
<!-- 	</bean>	 -->

	<!-- shiro过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<!-- 身份认证失败，则跳转到登录页面的配置 --> 
		<property name="loginUrl" value="/index/login.do" />
		<property name="successUrl" value="/back/login.do" />
		<!-- 权限认证失败，则跳转到指定页面 --> 
		<property name="unauthorizedUrl" value="/403.do" />
		<property name="filters">
			<util:map>
				<entry key="authc" value-ref="formAuthenticationFilter" />
			</util:map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				/home/**=authc
				/back/**=authc
			</value>
		</property>
	</bean>
	<bean id="myShiroRealm" class="com.gov.common.auth.ShiroRealmSimple"></bean>
	<!-- shiro安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="myShiroRealm" />
		<!-- 
		<property name="cacheManager" ref="shiroCacheManager"/>
	    <property name="cacheManager" ref="cacheManager"/>
		<property name="sessionManager" ref="sessionManager"/>
	    <property name="rememberMeManager" ref="rememberMeManager"/>
	     -->
	</bean>
	
	<!-- 缓存管理器 使用Ehcache实现
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:conf/ehcache.xml"/>
	</bean>  	
	-->

<!-- 	<bean id="myShiroRealm" class="com.gov.common.auth.ShiroRealmSimple"> -->
		<!-- businessManager 用来实现用户名密码的查询
		<property name="businessManager" ref="businessManager" />
		<property name="cacheManager" ref="shiroCacheManager" />		
		<property name="cachingEnabled" value="true"/>
	    <property name="authenticationCachingEnabled" value="true"/>
	    <property name="authenticationCacheName" value="authenticationCache"/>
	    <property name="authorizationCachingEnabled" value="true"/>
	    <property name="authorizationCacheName" value="authorizationCache"/>		
		 -->
<!-- 	</bean> -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter" />
	<!-- ################################################################ -->
	<!-- 安全管理器 -->
<!-- 	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">   -->
<!--   	  <property name="realm" ref="myRealm"/>   -->
<!-- 	</bean>   -->
	
	<!-- Shiro过滤器 -->
<!-- 	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">   -->
	    <!-- Shiro的核心安全接口,这个属性是必须的 -->  
<!-- 	    <property name="securityManager" ref="securityManager"/> -->
	    <!-- 身份认证失败，则跳转到登录页面的配置 -->  
<!-- 	    <property name="loginUrl" value="/index.jsp"/> -->
	    <!-- 权限认证失败，则跳转到指定页面 -->  
<!-- 	    <property name="unauthorizedUrl" value="/unauthor.jsp"/>   -->
	    <!-- Shiro连接约束配置,即过滤链的定义 -->  
<!-- 	    <property name="filterChainDefinitions">   -->
<!-- 	        <value>   -->
<!-- 	             /login=anon -->
<!-- 				/admin*=authc -->
<!-- 				/student=roles[teacher] -->
<!-- 				/teacher=perms["user:create"] -->
<!-- 	        </value>   -->
<!-- 	    </property> -->
<!-- 	</bean>   -->
	
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->  
<!-- 	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>   -->
	
	<!-- 开启Shiro注解 -->
<!-- 	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>   -->
<!--   		<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">   -->
<!--   	  <property name="securityManager" ref="securityManager"/>   -->
<!--     </bean>   -->
</beans>
